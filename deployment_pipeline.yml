# Sample CI/CD Pipeline Configuration

name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run unit tests
      run: python -m unittest discover tests/unit
    - name: Run integration tests
      run: python -m unittest discover tests/integration

  build:
    name: Build and Push Docker Image
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build Docker image
      run: docker build -t myapp:${{ github.sha }} .
    - name: Push to Docker Registry
      run: |
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        docker push myapp:${{ github.sha }}

  deploy:
    name: Deploy to Production
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to Kubernetes
      run: |
        kubectl set image deployment/myapp myapp=myapp:${{ github.sha }}
    - name: Verify Deployment
      run: |
        kubectl rollout status deployment/myapp
    - name: Run Smoke Tests
      run: |
        ./smoke_tests.sh

  monitor:
    name: Post-Deployment Monitoring
    needs: deploy
    runs-on: ubuntu-latest
    steps:
    - name: Check Application Health
      run: |
        curl -f https://myapp.example.com/health || exit 1
    - name: Monitor Error Rates
      run: |
        # Example: Query Prometheus for error rates
        ERROR_RATE=$(curl -s 'http://prometheus:9090/api/v1/query?query=rate(http_requests_total{status=~"5.."}[5m])')
        if (( $(echo "$ERROR_RATE > 0.01" | bc -l) )); then
          echo "Error rate is above 1%, consider rolling back"
          exit 1
        fi