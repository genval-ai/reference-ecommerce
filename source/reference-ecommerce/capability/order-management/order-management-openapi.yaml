openapi: 3.0.0
info:
  title: Order Management API
  version: 1.0.0
  description: API for managing orders in an e-commerce system

paths:
  /orders:
    post:
      summary: Create Order
      operationId: createOrder
      description: Creates a new order with the specified details
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrderResponse'
        '400':
          description: Bad request
        '500':
          description: Internal server error

  /orders/{orderId}:
    get:
      summary: Get Order
      operationId: getOrder
      description: Retrieves order details by order ID
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderResponse'
        '404':
          description: Order not found
        '500':
          description: Internal server error

    put:
      summary: Update Order
      operationId: updateOrder
      description: Updates an existing order's details
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderRequest'
      responses:
        '200':
          description: Order updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOrderResponse'
        '400':
          description: Bad request
        '404':
          description: Order not found
        '500':
          description: Internal server error

    delete:
      summary: Delete Order
      operationId: deleteOrder
      description: Deletes an existing order
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Order deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOrderResponse'
        '404':
          description: Order not found
        '500':
          description: Internal server error

components:
  schemas:
    CreateOrderRequest:
      type: object
      properties:
        customerID:
          type: string
        items:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
              quantity:
                type: integer
              price:
                type: number
        shippingAddress:
          type: object
        paymentDetails:
          type: object
      required:
        - customerID
        - items

    CreateOrderResponse:
      type: object
      properties:
        orderID:
          type: string
        status:
          type: string
        createdAt:
          type: string
          format: date-time
      required:
        - orderID
        - status
        - createdAt

    GetOrderResponse:
      type: object
      properties:
        orderID:
          type: string
        customerID:
          type: string
        items:
          type: array
          items:
            type: object
        status:
          type: string
        total:
          type: number
      required:
        - orderID
        - status

    UpdateOrderRequest:
      type: object
      properties:
        items:
          type: array
          items:
            type: object
        status:
          type: string

    UpdateOrderResponse:
      type: object
      properties:
        orderID:
          type: string
        status:
          type: string
        updatedAt:
          type: string
          format: date-time
      required:
        - orderID
        - status

    DeleteOrderResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
      required:
        - success