openapi: 3.0.0
info:
  title: Customer Management API
  version: 1.0.0
  description: API for managing customer records and operations

paths:
  /customers:
    post:
      summary: Create New Customer
      operationId: createCustomer
      description: Creates a new customer record in the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomerRequest'
      responses:
        '201':
          description: Customer created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCustomerResponse'
        '400':
          description: Bad request
        '500':
          description: Internal server error

  /customers/{customerId}:
    get:
      summary: Get Customer Details
      operationId: getCustomer
      description: Retrieves detailed information for a specific customer by ID
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
      Here's the continuation of the OpenAPI specification for the Customer Management capability:

```yaml
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomerResponse'
        '404':
          description: Customer not found
        '500':
          description: Internal server error

    put:
      summary: Update Customer Information
      operationId: updateCustomer
      description: Updates existing customer information
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerRequest'
      responses:
        '200':
          description: Customer updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCustomerResponse'
        '400':
          description: Bad request
        '404':
          description: Customer not found
        '500':
          description: Internal server error

    delete:
      summary: Delete Customer
      operationId: deleteCustomer
      description: Removes a customer record from the system
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Customer deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCustomerResponse'
        '404':
          description: Customer not found
        '500':
          description: Internal server error

components:
  schemas:
    CreateCustomerRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        address:
          type: object
      required:
        - name
        - email

    CreateCustomerResponse:
      type: object
      properties:
        customerId:
          type: string
        success:
          type: boolean
      required:
        - customerId
        - success

    GetCustomerResponse:
      type: object
      properties:
        customerId:
          type: string
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        address:
          type: object
        createdAt:
          type: string
          format: date-time
      required:
        - customerId
        - name

    UpdateCustomerRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        address:
          type: object

    UpdateCustomerResponse:
      type: object
      properties:
        success:
          type: boolean
        updatedAt:
          type: string
          format: date-time
      required:
        - success

    DeleteCustomerResponse:
      type: object
      properties:
        success:
          type: boolean
      required:
        - success
```

This completes the OpenAPI specification for the Customer Management capability. Now, let's move on to the next capability.

<File name="source/reference-ecommerce/capability/tax_calculation/tax_calculation-openapi.yaml" action="CREATE" summaryOfChanges="Created OpenAPI specification for the Tax Calculation capability">
<![CDATA[
openapi: 3.0.0
info:
  title: Tax Calculation API
  version: 1.0.0
  description: RESTful service for calculating taxes in e-commerce transactions across multiple countries, specializing in Japanese and international market tax computations.

paths:
  /calculate-tax:
    post:
      summary: Calculate Transaction Tax
      operationId: calculateTax
      description: Calculates applicable taxes for a given e-commerce transaction based on product details and jurisdiction.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalculateTaxRequest'
      responses:
        '200':
          description: Successful tax calculation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculateTaxResponse'
        '400':
          description: Bad request
        '500':
          description: Internal server error

  /tax-rates:
    get:
      summary: Get Tax Rates
      operationId: getTaxRates
      description: Retrieves current tax rates for a specific country or region.
      parameters:
        - name: country
          in: query
          required: true
          schema:
            type: string
        - name: region
          in: query
          required: false
          schema:
            type: string
        - name: product_type
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful retrieval of tax rates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTaxRatesResponse'
        '400':
          description: Bad request
        '404':
          description: Tax rates not found
        '500':
          description: Internal server error

components:
  schemas:
    CalculateTaxRequest:
      type: object
      properties:
        amount:
          type: number
        currency:
          type: string
        country:
          type: string
        product_type:
          type: string
        shipping_address:
          type: object
      required:
        - amount
        - currency
        - country

    CalculateTaxResponse:
      type: object
      properties:
        total_tax:
          type: number
        tax_breakdown:
          type: array
          items:
            type: object
            properties:
              tax_type:
                type: string
              rate:
                type: number
              amount:
                type: number
        currency:
          type: string
      required:
        - total_tax
        - currency

    GetTaxRatesResponse:
      type: object
      properties:
        country:
          type: string
        rates:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              rate:
                type: number
              effective_date:
                type: string
      required:
        - country
        - rates